#!/usr/bin/env python3
"""
Environment setup helper for the Telegram Trading Bot
This script helps you configure the required environment variables
"""

import os

def setup_environment():
    """Interactive setup for environment variables"""
    print("üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram Trading Bot")
    print("=" * 50)
    
    # Environment variables to configure
    env_vars = {
        'TELEGRAM_BOT_TOKEN': {
            'description': '–¢–æ–∫–µ–Ω Telegram –±–æ—Ç–∞ (–ø–æ–ª—É—á–∏—Ç–µ —É @BotFather)',
            'required': True,
            'example': '1234567890:ABCDEFGHIJKLMNOPQRSTUVWXYZ'
        },
        'BINANCE_API_KEY': {
            'description': 'API –∫–ª—é—á Binance Futures',
            'required': True,
            'example': 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
        },
        'BINANCE_API_SECRET': {
            'description': 'API —Å–µ–∫—Ä–µ—Ç Binance Futures',
            'required': True,
            'example': 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
        },
        'BINANCE_TESTNET': {
            'description': '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é —Å–µ—Ç—å Binance (true/false)',
            'required': False,
            'default': 'true',
            'example': 'true'
        },
        'AUTHORIZED_USERS': {
            'description': 'ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π Telegram —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é (–æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –≤—Å–µ–º)',
            'required': False,
            'example': '123456789,987654321'
        },
        'DEFAULT_TRADE_AMOUNT': {
            'description': '–†–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤ USDT',
            'required': False,
            'default': '10.0',
            'example': '10.0'
        },
        'MAX_POSITION_SIZE': {
            'description': '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏ –≤ USDT',
            'required': False,
            'default': '100.0',
            'example': '100.0'
        },
        'MAX_DRAWDOWN_PERCENT': {
            'description': '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–æ—Å–∞–¥–∫–∞ –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö',
            'required': False,
            'default': '20.0',
            'example': '20.0'
        },
        'STOP_LOSS_PERCENT': {
            'description': '–°—Ç–æ–ø-–ª–æ—Å—Å –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö',
            'required': False,
            'default': '3.0',
            'example': '3.0'
        },
        'TAKE_PROFIT_PERCENT': {
            'description': '–¢–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö',
            'required': False,
            'default': '6.0',
            'example': '6.0'
        }
    }
    
    env_content = []
    
    print("–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
    print("(–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å)\n")
    
    for var_name, config in env_vars.items():
        print(f"üìã {var_name}")
        print(f"   –û–ø–∏—Å–∞–Ω–∏–µ: {config['description']}")
        if 'example' in config:
            print(f"   –ü—Ä–∏–º–µ—Ä: {config['example']}")
        if 'default' in config:
            print(f"   –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é: {config['default']}")
        
        while True:
            value = input(f"   –í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ: ").strip()
            
            # Use default if available and no value entered
            if not value and 'default' in config:
                value = config['default']
                print(f"   –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {value}")
            
            # Check if required field is empty
            if config['required'] and not value:
                print("   ‚ùå –≠—Ç–æ –ø–æ–ª–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è!")
                continue
            
            # Add to env file if value provided
            if value:
                env_content.append(f"{var_name}={value}")
            
            break
        
        print()
    
    # Write .env file
    with open('.env', 'w') as f:
        f.write('\n'.join(env_content))
    
    print("‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
    print("\nüîß –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
    print("- –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–æ—Ä–≥–æ–≤—ã—Ö –ø–∞—Ä –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ config.py")
    print("- –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ trading_strategy.py")
    print("\nüöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞:")
    print("   python main.py")
    print("\n‚ö†Ô∏è  –í–ê–ñ–ù–û:")
    print("- –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –Ω–∞ testnet (BINANCE_TESTNET=true)")
    print("- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–µ–±–æ–ª—å—à–∏–µ —Å—É–º–º—ã –¥–ª—è –Ω–∞—á–∞–ª–∞")
    print("- –†–µ–≥—É–ª—è—Ä–Ω–æ –º–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞")
    print("- –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è —Ç–æ—Ä–≥–æ–≤–ª–∏")

def create_sample_env():
    """Create a sample .env file"""
    sample_content = """# Telegram Bot Configuration
TELEGRAM_BOT_TOKEN=your_telegram_bot_token_here

# Binance API Configuration
BINANCE_API_KEY=your_binance_api_key_here
BINANCE_API_SECRET=your_binance_api_secret_here
BINANCE_TESTNET=true

# Authorization (comma-separated Telegram user IDs, leave empty for public access)
AUTHORIZED_USERS=

# Trading Configuration
DEFAULT_TRADE_AMOUNT=10.0
MAX_POSITION_SIZE=100.0
MAX_DRAWDOWN_PERCENT=20.0
STOP_LOSS_PERCENT=3.0
TAKE_PROFIT_PERCENT=6.0

# Strategy Configuration
TREND_PERIOD=20
RSI_PERIOD=14
RSI_OVERSOLD=30
RSI_OVERBOUGHT=70
"""
    
    with open('.env.example', 'w') as f:
        f.write(sample_content)
    
    print("‚úÖ –§–∞–π–ª .env.example —Å–æ–∑–¥–∞–Ω!")
    print("–°–∫–æ–ø–∏—Ä—É–π—Ç–µ –µ–≥–æ –≤ .env –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Å–≤–æ–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏:")
    print("   cp .env.example .env")

def show_instructions():
    """Show setup instructions"""
    print("""
üöÄ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ Telegram Trading Bot

1. –°–û–ó–î–ê–ù–ò–ï TELEGRAM –ë–û–¢–ê:
   - –ù–∞–π–¥–∏—Ç–µ @BotFather –≤ Telegram
   - –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /newbot
   - –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞
   - –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω

2. –ù–ê–°–¢–†–û–ô–ö–ê BINANCE API:
   - –í–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç Binance
   - –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ API Management
   - –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π API –∫–ª—é—á
   - –í–∫–ª—é—á–∏—Ç–µ —Ç–æ—Ä–≥–æ–≤–ª—é —Ñ—å—é—á–µ—Ä—Å–∞–º–∏
   - –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ API Key –∏ Secret Key
   - ‚ö†Ô∏è  –†–ï–ö–û–ú–ï–ù–î–£–ï–¢–°–Ø: —Å–Ω–∞—á–∞–ª–∞ —Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –Ω–∞ Testnet

3. –ü–û–õ–£–ß–ï–ù–ò–ï TELEGRAM USER ID:
   - –ù–∞–π–¥–∏—Ç–µ @userinfobot –≤ Telegram
   - –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /start
   - –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –≤–∞—à User ID

4. –ù–ê–°–¢–†–û–ô–ö–ê –ü–ï–†–ï–ú–ï–ù–ù–´–• –û–ö–†–£–ñ–ï–ù–ò–Ø:
   - –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python setup_env.py
   - –ò–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env –≤—Ä—É—á–Ω—É—é

5. –ó–ê–ü–£–°–ö –ë–û–¢–ê:
   - python main.py

üìã –¢–†–ï–ë–û–í–ê–ù–ò–Ø:
- Python 3.8+
- –ê–∫–∫–∞—É–Ω—Ç Binance —Å –≤–∫–ª—é—á–µ–Ω–Ω—ã–º–∏ —Ñ—å—é—á–µ—Ä—Å–∞–º–∏
- Telegram –±–æ—Ç —Ç–æ–∫–µ–Ω
- –ú–∏–Ω–∏–º—É–º 50 USDT –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

‚ö†Ô∏è  –í–ê–ñ–ù–´–ï –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–Ø:
- –¢–æ—Ä–≥–æ–≤–ª—è –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞–º–∏ —Å–≤—è–∑–∞–Ω–∞ —Å –≤—ã—Å–æ–∫–∏–º–∏ —Ä–∏—Å–∫–∞–º–∏
- –ù–∞—á–∏–Ω–∞–π—Ç–µ —Å –Ω–µ–±–æ–ª—å—à–∏—Ö —Å—É–º–º
- –í—Å–µ–≥–¥–∞ —Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –Ω–∞ testnet –ø–µ—Ä–µ–¥ —Ä–µ–∞–ª—å–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–ª–µ–π
- –†–µ–≥—É–ª—è—Ä–Ω–æ –º–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç–æ–ø-–ª–æ—Å—Å—ã –¥–ª—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —É–±—ã—Ç–∫–æ–≤
""")

if __name__ == "__main__":
    import sys
    
    if len(sys.argv) > 1:
        if sys.argv[1] == "sample":
            create_sample_env()
        elif sys.argv[1] == "help":
            show_instructions()
        else:
            print("–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:")
            print("  python setup_env.py       - –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞")
            print("  python setup_env.py sample - –°–æ–∑–¥–∞—Ç—å –ø—Ä–∏–º–µ—Ä .env —Ñ–∞–π–ª–∞")
            print("  python setup_env.py help  - –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é")
    else:
        setup_environment()